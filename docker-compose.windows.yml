version: '3.8'

volumes:
  docker_lab_pgdata:
  models:
  data:

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: rag_db
    ports:
      - "55332:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ragdb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-ragdb}
      TZ: Asia/Tokyo
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-ragdb}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - docker_lab_pgdata:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag_frontend
    ports:
      - "8501:8501"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy_key}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-ragdb}
      - TZ=Asia/Tokyo
      - OLLAMA_API_BASE_URL=http://host.docker.internal:11434
    depends_on:
      - db
      - backend
    restart: always
    volumes:
      - ./frontend:/app
      - ./.env:/app/.env
      - models:/app/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.windows
      args:
        - PYTHONUNBUFFERED=1
        - PIP_CACHE_DIR=/root/.cache/pip
    image: rag_backend_windows
    container_name: rag_backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy_key}
      - TRANSFORMERS_CACHE=/app/.cache/huggingface/hub
      - HF_HOME=/app/.cache/huggingface
      - TORCH_HOME=/app/.cache/torch
      - TZ=Asia/Tokyo
      - POSTGRES_DB=${POSTGRES_DB:-ragdb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-ragdb}
      - OLLAMA_API_BASE_URL=http://host.docker.internal:11434
      - NVIDIA_DRIVER_CAPABILITIES=all
      - NVIDIA_VISIBLE_DEVICES=all
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - models:/app/.cache
      - ./local_models:/app/local_models
      - ./backend/app:/app/app
      - ./backend/models.yaml:/app/models.yaml
      - ./backend/strategies.yaml:/app/strategies.yaml
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # 開発用のデータベース管理ツール (Adminer)
  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: pepa-linha-dark

networks:
  default:
    name: rag_network
    driver: bridge
